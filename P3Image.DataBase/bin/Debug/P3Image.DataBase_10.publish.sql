/*
Deployment script for P3ImageDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "P3ImageDB"
:setvar DefaultFilePrefix "P3ImageDB"
:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Schema]...';


GO
CREATE SCHEMA [Schema]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [dbo].[Campo]...';


GO
CREATE TABLE [dbo].[Campo] (
    [Id]             INT          IDENTITY (1, 1) NOT NULL,
    [Descricao]      VARCHAR (50) NULL,
    [TipoId]         INT          NOT NULL,
    [SubCategoriaId] INT          NOT NULL,
    CONSTRAINT [PK_Campo] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[CampoValor]...';


GO
CREATE TABLE [dbo].[CampoValor] (
    [Id]      INT          IDENTITY (1, 1) NOT NULL,
    [CampoId] INT          NOT NULL,
    [Valor]   VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_CampoValor] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Categoria]...';


GO
CREATE TABLE [dbo].[Categoria] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Categoria] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SubCategoria]...';


GO
CREATE TABLE [dbo].[SubCategoria] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Descricao]   VARCHAR (50) NULL,
    [CategoriaId] INT          NULL,
    CONSTRAINT [PK_SubCategoria] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TipoCampo]...';


GO
CREATE TABLE [dbo].[TipoCampo] (
    [Id]        INT          NOT NULL,
    [Descricao] VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_TipoCampo] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating FK_Campo_TipoCampo...';


GO
ALTER TABLE [dbo].[Campo]
    ADD CONSTRAINT [FK_Campo_TipoCampo] FOREIGN KEY ([TipoId]) REFERENCES [dbo].[TipoCampo] ([Id]);


GO
PRINT N'Creating FK_Campo_SubCategoria...';


GO
ALTER TABLE [dbo].[Campo]
    ADD CONSTRAINT [FK_Campo_SubCategoria] FOREIGN KEY ([SubCategoriaId]) REFERENCES [dbo].[SubCategoria] ([Id]);


GO
PRINT N'Creating FK_CampoValor_Campo...';


GO
ALTER TABLE [dbo].[CampoValor]
    ADD CONSTRAINT [FK_CampoValor_Campo] FOREIGN KEY ([CampoId]) REFERENCES [dbo].[Campo] ([Id]);


GO
PRINT N'Creating FK_Categoria_SubCategoria...';


GO
ALTER TABLE [dbo].[SubCategoria]
    ADD CONSTRAINT [FK_Categoria_SubCategoria] FOREIGN KEY ([CategoriaId]) REFERENCES [dbo].[Categoria] ([Id]);


GO
PRINT N'Creating [dbo].[GetDirectDemoById]...';


GO
CREATE PROCEDURE [dbo].[GetDirectDemoById]
	@Id int = NULL
AS
	SELECT BT1.Value1 AS DirectDemoValue1,
		   BT1.Value2 AS DirectDemoValue2,
		   BT1.Value3 AS DirectDemoValue3,
		   BT2.Value1 AS DirectDemoValue4,
		   BT2.Value2 AS DirectDemoValue5,
		   BT2.Value3 AS DirectDemoValue6
	 FROM BadTable1 BT1 INNER JOIN BadTable2 BT2 ON BT1.Id = BT2.Id WHERE BT1.Id = @Id
RETURN 0
GO
PRINT N'Creating [dbo].[GetDirectDemos]...';


GO
CREATE PROCEDURE [dbo].[GetDirectDemos]
AS
	SELECT BT1.Value1 AS DirectDemoValue1,
		   BT1.Value2 AS DirectDemoValue2,
		   BT1.Value3 AS DirectDemoValue3,
		   BT2.Value1 AS DirectDemoValue4,
		   BT2.Value2 AS DirectDemoValue5,
		   BT2.Value3 AS DirectDemoValue6
	 FROM BadTable1 BT1 INNER JOIN BadTable2 BT2 ON BT1.Id = BT2.Id 
RETURN 0
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-----------------------------------------------------TIPO CAMPO-------------------------------------------------------------


IF NOT EXISTS (SELECT * FROM [dbo].[TipoCampo] WHERE [Id] = 1)
	INSERT [dbo].[TipoCampo] ([Id], [Descricao]) VALUES (1, N'TextBox')
ELSE
	UPDATE [dbo].[TipoCampo] SET [Descricao] = N'TextBox' WHERE [Id] = 1

IF NOT EXISTS (SELECT * FROM [dbo].[TipoCampo] WHERE [Id] = 2)
	INSERT [dbo].[TipoCampo] ([Id], [Descricao]) VALUES (2, N'CheckBox')
ELSE
	UPDATE [dbo].[TipoCampo] SET [Descricao] = N'CheckBox' WHERE [Id] = 2

IF NOT EXISTS (SELECT * FROM [dbo].[TipoCampo] WHERE [Id] = 3)
	INSERT [dbo].[TipoCampo] ([Id], [Descricao]) VALUES (3, N'ComboBox')
ELSE
	UPDATE [dbo].[TipoCampo] SET [Descricao] = N'ComboBox' WHERE [Id] = 3
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.'
GO
